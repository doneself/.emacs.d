;; =============================括号==============================
;; (setq show-paren-style 'parenthesis)    ; highlight just brackets
;; (setq show-paren-style 'expression)     ; highlight entire bracket expression
;; (setq skeleton-pair t)                  ;自动插入匹配的括号
(defun insert-bracket-pair (leftBracket rightBracket)
  (if (region-active-p)
      (let (
            (p1 (region-beginning))
            (p2 (region-end)))
        (goto-char p2)
        (insert rightBracket)
        (goto-char p1)
        (insert leftBracket)
        (goto-char (+ p2 2)))
    (progn
      (insert leftBracket rightBracket)
      (backward-char 1))))
(defun insert-pair-paren () (interactive) (insert-bracket-pair "(" ")"))
(defun insert-pair-bracket () (interactive) (insert-bracket-pair "[" "]"))
(defun insert-pair-brace () (interactive) (insert-bracket-pair "{" "}"))
(defun insert-pair-double-straight-quote () (interactive) (insert-bracket-pair "\"" "\""))
(defun insert-pair-single-straight-quote () (interactive) (insert-bracket-pair "'" "'"))
(defun insert-pair-single-angle-quote‹› () (interactive) (insert-bracket-pair "‹" "›"))
(defun insert-pair-double-angle-quote«» () (interactive) (insert-bracket-pair "«" "»"))
(defun insert-pair-double-curly-quote () (interactive) (insert-bracket-pair "“" "”"))
(defun insert-pair-single-curly-quote () (interactive) (insert-bracket-pair "‘" "’"))
(defun insert-pair-corner-bracket「」 () (interactive) (insert-bracket-pair "「" "」"))
(defun insert-pair-white-corner-bracket『』 () (interactive) (insert-bracket-pair "『" "』"))
(defun insert-pair-angle-bracket () (interactive) (insert-bracket-pair "<" ">"))
(defun insert-pair-double-angle-bracket () (interactive) (insert-bracket-pair "《" "》"))
(defun insert-pair-white-lenticular-bracket〖〗 () (interactive) (insert-bracket-pair "〖" "〗"))
(defun insert-pair-black-lenticular-bracket【】 () (interactive) (insert-bracket-pair "【" "】"))
(defun insert-pair-tortoise-shell-bracket〔〕 () (interactive) (insert-bracket-pair "〔" "〕"))
(defun insert-pair-math-bracket () (interactive) (insert-bracket-pair " $" "$ "))
(defun insert-pair-star-bracket () (interactive) (insert-bracket-pair " *" "* "))
(global-set-key (kbd "{") 'insert-pair-brace)
(global-set-key (kbd "(") 'insert-pair-paren)
(global-set-key (kbd "[") 'insert-pair-bracket)
(global-set-key (kbd "<") 'insert-pair-angle-bracket)
(global-set-key (kbd "《") 'insert-pair-double-angle-bracket)
(global-set-key (kbd "'") 'insert-pair-single-straight-quote)
(global-set-key (kbd "\"") 'insert-pair-double-straight-quote)
(global-set-key (kbd "“") 'insert-pair-double-curly-quote)
(global-set-key (kbd "”") 'insert-pair-double-curly-quote)
(global-set-key (kbd "‘") 'insert-pair-single-curly-quote)
(global-set-key (kbd "’") 'insert-pair-single-curly-quote)
(add-hook 'LaTeX-mode-hook
          '(lambda ()
             (define-key LaTeX-mode-map (kbd "$") 'insert-pair-math-bracket)))
(add-hook 'org-mode-hook
          '(lambda ()
             (define-key org-mode-map (kbd "*") 'insert-pair-star-bracket)
             (define-key org-mode-map (kbd "$") 'insert-pair-math-bracket)))
;; (global-set-key (kbd "(") 'skeleton-pair-insert-maybe)
;; (global-set-key (kbd "[") 'skeleton-pair-insert-maybe)
;; (global-set-key (kbd "{") 'skeleton-pair-insert-maybe)
;; (global-set-key (kbd "<") 'skeleton-pair-insert-maybe)
;; =============================括号==============================
(provide 'setup_parenthesis)
