;; ==================paredit=========================
;; 在emacs-lisp中很有用，但对我用处不大
;; (add-to-list 'load-path "~/.emacs.d/paredit/")
(require 'paredit)
(autoload 'enable-paredit-mode "paredit" t)
(add-hook 'emacs-lisp-mode-hook 'enable-paredit-mode)
(defun paredit-wrap-round-from-behind ()
  (interactive)
  (forward-sexp -1)
  (paredit-wrap-round)
  (insert " ")
  (forward-char -1))
(defun paredit-wrap-square-from-behind ()
  (interactive)
  (forward-sexp -1)
  (paredit-wrap-square))
(defun paredit-wrap-curly-from-behind ()
  (interactive)
  (forward-sexp -1)
  (paredit-wrap-curly))
(eval-after-load 'paredit
  '(progn
     (define-key paredit-mode-map (kbd "M-s") nil)
     (define-key paredit-mode-map (kbd "C-j") nil)
     (define-key paredit-mode-map (kbd "M-r") nil)
     (define-key paredit-mode-map (kbd "M-J") nil)
     (define-key paredit-mode-map (kbd "M-K") nil)
     (define-key paredit-mode-map (kbd "C-M-<left>") nil)
     (define-key paredit-mode-map (kbd "C-M-<right>") nil)
     (define-key paredit-mode-map (kbd "C-c (") 'paredit-backward-slurp-sexp)
     (define-key paredit-mode-map (kbd "C-c )") 'paredit-forward-slurp-sexp)
     (define-key paredit-mode-map (kbd "C-c {") 'paredit-backward-barf-sexp)
     (define-key paredit-mode-map (kbd "C-c }") 'paredit-forward-barf-sexp)
     (define-key paredit-mode-map (kbd "M-s (") 'paredit-wrap-round)
     (define-key paredit-mode-map (kbd "M-s )") 'paredit-wrap-round-from-behind)
     (define-key paredit-mode-map (kbd "M-s [") 'paredit-wrap-square)
     (define-key paredit-mode-map (kbd "M-s ]") 'paredit-wrap-square-from-behind)
     (define-key paredit-mode-map (kbd "M-s {") 'paredit-wrap-curly)
     (define-key paredit-mode-map (kbd "M-s }") 'paredit-wrap-curly-from-behind)
     (define-key paredit-mode-map (kbd "M-S") 'paredit-split-sexp)
     (define-key paredit-mode-map (kbd "M-E") 'paredit-raise-sexp)
     (define-key paredit-mode-map (kbd "M-A") 'paredit-join-sexps)
     (define-key paredit-mode-map (kbd "M-D") 'paredit-splice-sexp)
     ))
;; M-( M-) M-[ M-] M-{ M-} M-" M-S M-E M-A M-D C-) C-} C-( C-{ C-M-d C-M-u C-M-p C-M-n
;; 在其他mode中使用paredit
;; (add-to-list 'load-path "~/.emacs.d/paredit-everywhere/")
(require 'paredit-everywhere)
(add-hook 'LaTeX-mode-hook 'paredit-everywhere-mode)
(add-hook 'org-mode-hook 'paredit-everywhere-mode)
(add-hook 'octave-mode-hook 'paredit-everywhere-mode)
(add-hook 'gnuplot-mode-hook 'paredit-everywhere-mode)
(add-hook 'c-mode-hook 'paredit-everywhere-mode)
(add-hook 'graphviz-dot-mode-hook 'paredit-everywhere-mode)
(add-hook 'lisp-interaction-mode-hook 'paredit-everywhere-mode)
(eval-after-load 'paredit-everywhere
  '(progn
     (define-key paredit-everywhere-mode-map (kbd "M-s") nil)
     (define-key paredit-everywhere-mode-map (kbd "M-r") nil)
     (define-key paredit-everywhere-mode-map (kbd "M-d") nil)
     (define-key paredit-everywhere-mode-map (kbd "M-J") nil)
     (define-key paredit-everywhere-mode-map (kbd "M-K") nil)
     (define-key paredit-everywhere-mode-map (kbd "C-c (") 'paredit-backward-slurp-sexp)
     (define-key paredit-everywhere-mode-map (kbd "C-c )") 'paredit-forward-slurp-sexp)
     (define-key paredit-everywhere-mode-map (kbd "C-c {") 'paredit-backward-barf-sexp)
     (define-key paredit-everywhere-mode-map (kbd "C-c }") 'paredit-forward-barf-sexp)
     (define-key paredit-everywhere-mode-map (kbd "M-s (") 'paredit-wrap-round)
     (define-key paredit-everywhere-mode-map (kbd "M-s )") 'paredit-wrap-round-from-behind)
     (define-key paredit-everywhere-mode-map (kbd "M-s [") 'paredit-wrap-square)
     (define-key paredit-everywhere-mode-map (kbd "M-s ]") 'paredit-wrap-square-from-behind)
     (define-key paredit-everywhere-mode-map (kbd "M-s {") 'paredit-wrap-curly)
     (define-key paredit-everywhere-mode-map (kbd "M-s }") 'paredit-wrap-curly-from-behind)
     (define-key paredit-everywhere-mode-map (kbd "M-S") 'paredit-split-sexp)
     (define-key paredit-everywhere-mode-map (kbd "M-E") 'paredit-raise-sexp)
     (define-key paredit-everywhere-mode-map (kbd "M-A") 'paredit-join-sexps)
     (define-key paredit-everywhere-mode-map (kbd "M-D") 'paredit-splice-sexp)
     ))
;; M-( M-) M-[ M-] M-{ M-} M-" M-S M-E M-A M-D C-) C-} C-( C-{ M-DEL M-d ;paredit-everywhere-mode的所有快捷键
;; ==================paredit=========================
(provide 'setup_paredit)
