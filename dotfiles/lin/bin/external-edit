#!/bin/sh

while getopts "se:" arg         #选项后面的冒号表示该选项需要参数
do
    case $arg in
        s)
            sel=1
            ;;
        e)
            editor=$OPTARG      #参数存在$OPTARG中
            ;;
        ?)                      #当有不认识的选项的时候arg为?
        echo "Usage: external-edit [-s] [-e editor]"
        echo "-s select"
        echo "-e editor"
        exit 1
        ;;
    esac
done

winid=`xdpyinfo | sed -ne 's/^focus:.*\(0x[^,]\+\).*/\1/p'`

if xwininfo -id $winid | grep "(has no name)"
then
    winid=`printf "0x%x\n" $(( $winid - 1 ))` #Decrement by one.
fi

wintitle=`xwininfo -id $winid | sed -ne 's/xwininfo: .*"\([^"]\+\)"/\1/p'`
Emacs_style='^.*(Mozilla Firefox|Microsoft Word)$'

xte_selectall()
{
    case $wintitle in
        *Mozilla\ Firefox* | *Microsoft\ Word* )
            xte <<EOF
sleep 1
keydown Control_L
key x
keyup Control_L
key h
EOF
            ;;
        *)
            xte <<EOF
sleep 1
keydown Control_L
key a
keyup Control_L
EOF
            ;;
    esac
}

# copy text using application keyboard short-cuts
if [ $sel ]; then
    xte_selectall
fi

Wind_wine=`xdotool getwindowfocus -f`

if [ $(xdotool search --onlyvisible --class "wine" | grep -i $Wind_wine) ]; then
    xdotool key --clearmodifiers ctrl+c
    xclip -selection clipboard -o | sed 's/[\"]/\\&/g' > "/tmp/eaclipboard"
else
    xclip -selection primary -o | sed 's/[\"]/\\&/g' > "/tmp/eaclipboard"
fi

run-or-raise.sh emacs

ELISP=$( cat $HOME/bin/emacs_anywhere.el )

$editor -a '' -c -e "(progn $ELISP)"

wmctrl -ia $winid

if [ $sel ]; then
    xte_selectall
fi

if [[ $wintitle =~ $Emacs_style  ]];then
    xdotool key --clearmodifiers ctrl+y
else
    xdotool key --clearmodifiers ctrl+v
fi
